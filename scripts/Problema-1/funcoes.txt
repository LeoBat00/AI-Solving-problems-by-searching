1.Minimização x1, x2 ∈ [−100, 100]
return x1**2 + x2**2 

2.Maximização x1 ∈ [−2, 4] e x2 ∈ [−2, 5] 
return np.exp(-(x1**2 + x2**2)) + 2 * np.exp(-((x1-1.7)**2 + (x2-1.7)**2))

3.Minimização x1, x2 ∈ [−8, 8]. 
return -20 * np.exp(-0.2 * np.sqrt(0.5 * (x1**2 + x2**2))) - np.exp(0.5 * (np.cos(2*np.pi*x1) + np.cos(2*np.pi*x2))) + 20 + np.exp(1)

4.Minimização x1, x2 ∈ [−5.12, 5.12]. 
return (x1**2 - 10 * np.cos(2*np.pi*x1) + 10) + (x2**2 - 10 * np.cos(2*np.pi*x2) + 10)

5.Maximização x1 ∈ [−10, 10] e x2 ∈ [−10, 10].
return (x1 * np.cos(x1)) / 20 + 2 * np.exp(-((x1-1)**2 + (x2-1)**2)) + 0.01 * x1 * x2

6.Maximização x1 ∈ [−1, 3] e x2 ∈ [−1, 3]
return x1 * np.sin(4*np.pi*x1) - x2 * np.sin(4*np.pi*x2 + np.pi) + 1

7.Minimização x1 ∈ [0, π] e x2 ∈ [0, π].
return -np.sin(x1) * np.sin((x1**2/np.pi)**2.1) - np.sin(x2) * np.sin((2*x2**2/np.pi)**2.1)

8.Minimização x1 ∈ [−200, 20] e x2 ∈ [−200, 20].
return -(x2 + 47) * np.sin(np.sqrt(x1**2 + (x2 + 47)**2)) - x1 * np.sin(np.sqrt(x1**2 - (x2 + 47)**2))

